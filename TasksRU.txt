Task01:
    1. Описать класс «Cat» (вкачестве образца можно взять домашнего питомца).Наделить его свойствами и методами.
       Создать несколько экземпляров объектов этого класса. Использовать эти объекты.
    2. Описать класс «Triangle». В качестве свойств возьмите длины сторон треугольника. Реализуйте метод,который
       будет возвращать площадь этого треугольника. Создайте несколько объектов этого класса и протестируйте их.
    3. Описать класс «Vector3d» (т.е. он должен описывать вектор в 3-х мерной, декартовой системе координат).
       В качестве свойств этого класса возьмите координаты вектора. Для этого класса реализовать методы сложения,
       скалярного и векторного произведения векторов. Создайте несколько объектов этого класса и протестируйте их.
Task02:
    1. Создайте абстрактный класс Shape в котором есть два абстрактных метода double getPerimetr() и double getArea().
    2. Создайте класс Point в котором есть два свойства double x и double y
    3. Создайте классы которые описывают как минимум 3 геометрические фигуры (они должны быть подклассами Shape),
       при этом они вкачестве свойств должны содержать классы  Point.
    4. Создайте класс доска. Доска поделена на 4 части в каждую часть доски можно положить одну из фигур. У доски должны
       быть методы которые помещают и удаляют фигуру с доски. Также должен быть метод который выводит информацию о
       всех фигурах лежащих на доске и их суммарную площадь.
Task03:
    1. Создайте класс описывающий человека (создайте метод выводящий информацию о человеке)
    2. На его основе создайте класс студент (переопределите метод вывода информации)
    3. Создайте класс группа — который содержит массив из 10 объектов класса студент.
       Реализуйте методы добавления, удаления студента и метод поиска студента по фамилии.
       В случае попытки добавления 11 студента создайте собственное исключение и обработайте его.
       Определите метод toString() для группы так, что бы он выводил список студентов в алфавитном порядке.
Task04:
    1. Усовершенствуйте класс Group (Task3) добавив возможность интерактивного добавления объекта.
    2. Реализуйте возможность сортировки списка студентов по фамилии.(Task03)
    3. Реализуйте возможность сортировки по параметру (Фамилия, успеваемость и т. д.).(Task03)
    4. Реализуйте интерфейс Военком которые вернет из группы массив студентов юношей которым больше 18 лет.(Task03)
    5. Протестируйте ее работу.
Task05:
    1. Напишите программу которая скопирует файлы (с заранее определенным расширением — например только doc) из
       каталога источника в каталог приемник.
    2. Напишите программу которая примет на вход 2 текстовых файла, а вернет один.
       Содержимым этого файла должны быть слова которые есть и в первом и во втором файле.
    3. Усовершенствуйте класс описывающий группу студентов добавив возможность сохранения группы в файл. (Task03)
    4. Реализовать обратный процесс — т.е. считать данные о группе из файла и на их основе создать объект типа группа.(Task03)
Task06:
    1. Создайте сто потоков которые будут вычислять факториал числа равного номеру этого потока и выводить результат на
       экран.
    2. Написать код для многопоточного подсчета суммы элементов массива целых чисел. Сравнить скорость подсчета с простым
       алгоритмом.
    3. Напишите многопоточный вариант сортировки массива методом Шелла.
    4. Реализуйте многопоточное копирование каталога, содержащего несколько файлов.
    5. Реализуйте программу которая с периодичностью 1 сек, будет проверять состояние заданного каталога. Если в этом
       каталоге появиться новый файл или исчезнет, то выведет сообщение об этом событии. Программа должна работать в
       параллельном потоке выполнения.
Task07:
    1. Существуют три корабля. На каждом из них 10 ящиков груза. Они одновременно прибыли в порт в котором только два
       дока. Скорость разгрузки 1 ящик в 0.5 сек. Напишите программу которая управляя кораблями позволит им
       правильно разгрузить груз.
    2. Реализуйте программу многопоточного копирования файла блоками, с выводом прогресса на экран.
    3. Реализуйте процесс многопоточного поиска файла в файловой системе. Т.е. вы вводите название файла и в какой
       части файловой системы его искать. Программа должна вывести на экран все адреса в файловой системе файлов с
       таким названием.
Task08:
    1. Используя стандартный методы сериализации создайте мини базу данных для работы с группами студентов
       (возможность записи и чтения базы из файла по запросу пользователя).
    2. Создайте класс контейнер - стек (класс в который можно добавлять и удалять объекты других классов,
       только в вершину стека) в который можно сохранять объекты произвольного типа. Должен быть метод
       добавления элемента в стек,получение с удалением элемента из стека, и просто получение элемента из вершины из стека.
       Должна быть реализована работа с «черным списком» классов (смотри ниже). Если объект который добавляется в стек
       принадлежит классу из черного списка, то добавление такого объекта запрещено
    3. Для описанного выше стека создайте класс «Черный список» в котором будут описаны классы объектов которые нельзя
       добавлять в стек. Должна быть возможность добавления классов в черный список, проверка объекта — на то что
       класс к которому он принадлежит принадлежит или не принадлежит к классам в черном списке.
Task09:
    1. Написать метод, который создаст список, положит в него 10 элементов, затем удалит первые два и последний, а затем
       выведет результат на экран.
    2. Модифицируйте класс группа для более удобных методов работы с динамическими массивами.
    3. Считайте из файла текст на английском языке, вычислите относительную частоту повторения каждой буквы и
       выведите на экран результат в порядке убывания относительной частоты повторения.
    4. Шелдон, Леонард, Воловиц, Кутрапалли и Пенни стоят в очереди за «двойной колой». Как только человек выпьет
       такой колы он раздваивается и оба становятся в конец очереди, что бы выпить еще стаканчик.
       Напишите программу которая выведет на экран состояние очереди в зависимости от того сколько стаканов колы
       выдал аппарат с чудесным напитком. Например если было выдано только два стакана, то очередь выглядит как:
       [Volovitc, Kutrapalli, Penny,Sheldon,Sheldon,Leonard,Leonard]